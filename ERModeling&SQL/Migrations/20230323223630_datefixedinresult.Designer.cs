// <auto-generated />
using System;
using ERModeling_SQL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERModeling_SQL.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    [Migration("20230323223630_datefixedinresult")]
    partial class datefixedinresult
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ERModeling_SQL.Models.Administration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdministratorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administrations");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.ClassList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClassLists");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.CourseList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CourseLists");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.GradeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GradeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GradeLists");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FkAdministrationId")
                        .HasColumnType("int");

                    b.Property<int>("FkClassListId")
                        .HasColumnType("int");

                    b.Property<int>("FkCourseListId")
                        .HasColumnType("int");

                    b.Property<int>("FkGradeListId")
                        .HasColumnType("int");

                    b.Property<int>("FkStudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResultDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FkAdministrationId");

                    b.HasIndex("FkClassListId");

                    b.HasIndex("FkCourseListId");

                    b.HasIndex("FkGradeListId");

                    b.HasIndex("FkStudentId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.Result", b =>
                {
                    b.HasOne("ERModeling_SQL.Models.Administration", "Administrations")
                        .WithMany("Results")
                        .HasForeignKey("FkAdministrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERModeling_SQL.Models.ClassList", "ClassLists")
                        .WithMany("Results")
                        .HasForeignKey("FkClassListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERModeling_SQL.Models.CourseList", "CourseLists")
                        .WithMany("Results")
                        .HasForeignKey("FkCourseListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERModeling_SQL.Models.GradeList", "GradeLists")
                        .WithMany("Results")
                        .HasForeignKey("FkGradeListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERModeling_SQL.Models.Student", "Students")
                        .WithMany("Results")
                        .HasForeignKey("FkStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrations");

                    b.Navigation("ClassLists");

                    b.Navigation("CourseLists");

                    b.Navigation("GradeLists");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.Administration", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.ClassList", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.CourseList", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.GradeList", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("ERModeling_SQL.Models.Student", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
